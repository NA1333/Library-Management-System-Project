1. List All Books Issued by a Specific Member

SELECT M.Name AS MemberName, B.Title AS BookTitle, IB.IssueDate, IB.ReturnDate, IB.Returned
FROM IssuedBooks IB
JOIN Members M ON IB.MemberID = M.MemberID
JOIN Books B ON IB.BookID = B.BookID
WHERE M.Name = 'John Doe';

2. List Overdue Books and Fines

SELECT M.Name AS MemberName, B.Title AS BookTitle, IB.IssueDate, IB.ReturnDate, DATEDIFF(CURRENT_DATE, IB.ReturnDate) AS DaysOverdue,
       CASE 
           WHEN DATEDIFF(CURRENT_DATE, IB.ReturnDate) > 0 THEN DATEDIFF(CURRENT_DATE, IB.ReturnDate) * 1
           ELSE 0
       END AS FineAmount
FROM IssuedBooks IB
JOIN Members M ON IB.MemberID = M.MemberID
JOIN Books B ON IB.BookID = B.BookID
WHERE IB.Returned = 0 AND IB.ReturnDate < CURRENT_DATE;

3. Most Popular Books (Books Issued the Most)

SELECT B.Title, COUNT(IB.IssueID) AS TimesIssued
FROM IssuedBooks IB
JOIN Books B ON IB.BookID = B.BookID
GROUP BY B.BookID
ORDER BY TimesIssued DESC
LIMIT 5;

4. List Members Who Have Not Returned Books

SELECT M.Name, M.Email, B.Title, IB.IssueDate, IB.ReturnDate
FROM IssuedBooks IB
JOIN Members M ON IB.MemberID = M.MemberID
JOIN Books B ON IB.BookID = B.BookID
WHERE IB.Returned = 0;

5. Books Availability Status
SELECT B.Title, B.Copies, B.AvailableCopies, 
    CASE 
        WHEN B.AvailableCopies > 0 THEN 'Available'
        ELSE 'Not Available'
    END AS AvailabilityStatus
FROM Books B;
